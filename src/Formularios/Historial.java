/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Formularios;

import BaseDeDatos.ConexionMySQL;
import com.toedter.calendar.JDateChooser;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author sotoxx
 */
public class Historial extends javax.swing.JInternalFrame {
    
    /**
     *declarar la varianles de la pantalla
     */
   long enfermedades;
    String focoBusq,pacID,pacNombre,tPacCedula,pacCedula,pacEdad,pacDireccion,pacTelefono,pacSexo,preAlergia,
            pre_est_des,pre_med_des,pre_dol_des,pre_mas_des,pre_orl_des,preAlergiaOpc,pre_orlOpc;
    boolean histEstado,pre_est,pre_med,pre_dol,preRonca,preResfrio,preAdm_sin,pre_RespiraBoca,pre_mas,pre_orl;
    Date pre_orl_fecha;
    int nroHistoria,preRespOpc;
    int[] enfermedadesArray= new int[14];            
    int[] preAlergiaOpcArray= new int[3];
    int[] pre_orlOpcArray= new int[3];
    
    
    
    
    

    /**
     * Creates new form Historial
     */
    public Historial() {
        initComponents();
        configurar_fecha(fchOrl);
        inicializarPantalla();
        inicializarAtributos();
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        cmbSexo = new javax.swing.JComboBox();
        txtEdad = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtcedula = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtNroHist = new javax.swing.JTextField();
        txtDomicilio = new javax.swing.JTextField();
        cmbTCedPac = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        lblEstPorque = new javax.swing.JLabel();
        tbtnEst = new javax.swing.JToggleButton();
        jtxtEstDes = new javax.swing.JScrollPane();
        txtEstDes = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tbtnMed = new javax.swing.JToggleButton();
        lblMedCuales = new javax.swing.JLabel();
        jtxtMedDes = new javax.swing.JScrollPane();
        txtMedDes = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        txtDolDes = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        rbtnPolvo = new javax.swing.JRadioButton();
        rbtnMed = new javax.swing.JRadioButton();
        rbtnAlimentos = new javax.swing.JRadioButton();
        txtAlerDes = new javax.swing.JTextField();
        rbtnOtros = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        tbtnRonca = new javax.swing.JToggleButton();
        jLabel18 = new javax.swing.JLabel();
        tbtnResp = new javax.swing.JToggleButton();
        cmbResCuando = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        tbtnResfrio = new javax.swing.JToggleButton();
        jLabel20 = new javax.swing.JLabel();
        tbtnAmigd = new javax.swing.JToggleButton();
        jtxtMastDes = new javax.swing.JScrollPane();
        txtMastDes = new javax.swing.JTextArea();
        lblMastPorque = new javax.swing.JLabel();
        tbtnMast = new javax.swing.JToggleButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        tbtnOrl = new javax.swing.JToggleButton();
        lblOrlPorque = new javax.swing.JLabel();
        jtxtOrlDes = new javax.swing.JScrollPane();
        txtOrlDes = new javax.swing.JTextArea();
        rbtnCirugia = new javax.swing.JRadioButton();
        rbtnAmigd = new javax.swing.JRadioButton();
        rbtnAdenoi = new javax.swing.JRadioButton();
        fchOrl = new com.toedter.calendar.JDateChooser();
        lblOrlCuando = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        rbtnasma = new javax.swing.JRadioButton();
        rbtndiabetes = new javax.swing.JRadioButton();
        rbtnanemia = new javax.swing.JRadioButton();
        rbtnherpes = new javax.swing.JRadioButton();
        rbtnepilepsia = new javax.swing.JRadioButton();
        rbtnhepatitis = new javax.swing.JRadioButton();
        rbtnecardiaca = new javax.swing.JRadioButton();
        rbtnhipertencion = new javax.swing.JRadioButton();
        rbtnesanguinea = new javax.swing.JRadioButton();
        rbtnpendcrino = new javax.swing.JRadioButton();
        rbtnfreumatica = new javax.swing.JRadioButton();
        rbtntoseos = new javax.swing.JRadioButton();
        rbtndcerebral = new javax.swing.JRadioButton();
        rbtnpemocionales = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        btnguardar = new javax.swing.JButton();
        btnlimpiar = new javax.swing.JButton();
        btnbuscar = new javax.swing.JButton();
        btnactualizar = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();
        btncancelar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Registro y Consulta de Historial");
        setToolTipText("");
        setName("Historial"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Datos del Paciente");
        jLabel1.setFocusable(false);

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel2.setText("Nombre:");
        jLabel2.setFocusable(false);

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel3.setText("Edad:");
        jLabel3.setFocusable(false);

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel4.setText("Sexo:");
        jLabel4.setFocusable(false);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel5.setText("Domicilio Particular:");
        jLabel5.setFocusable(false);

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel6.setText("Telefono:");
        jLabel6.setFocusable(false);

        txtNombre.setEditable(false);
        txtNombre.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtNombre.setFocusable(false);

        cmbSexo.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        cmbSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hombre", "Mujer" }));
        cmbSexo.setFocusable(false);

        txtEdad.setEditable(false);
        txtEdad.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtEdad.setFocusable(false);

        txtTelefono.setEditable(false);
        txtTelefono.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtTelefono.setFocusable(false);

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel7.setText("Nro de Historia:");

        txtcedula.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtcedula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtcedulaFocusGained(evt);
            }
        });
        txtcedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcedulaKeyTyped(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel26.setText("Cedula:");
        jLabel26.setFocusable(false);

        txtNroHist.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtNroHist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNroHistActionPerformed(evt);
            }
        });
        txtNroHist.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNroHistFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNroHistFocusLost(evt);
            }
        });
        txtNroHist.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNroHistKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNroHistKeyTyped(evt);
            }
        });

        txtDomicilio.setEditable(false);
        txtDomicilio.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtDomicilio.setFocusable(false);

        cmbTCedPac.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "V-", "E-" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(274, 274, 274)
                                .addComponent(jLabel1))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(95, 95, 95)
                                        .addComponent(jLabel2))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNombre)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                                    .addComponent(txtDomicilio))))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(6, 6, 6))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbTCedPac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(8, 8, 8)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNroHist)
                    .addComponent(txtcedula)
                    .addComponent(txtEdad)
                    .addComponent(cmbSexo, 0, 106, Short.MAX_VALUE))
                .addGap(43, 43, 43))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNroHist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtcedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbTCedPac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(cmbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblEstPorque.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lblEstPorque.setText("¿Por qué?");
        lblEstPorque.setFocusable(false);

        tbtnEst.setText("No");
        tbtnEst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtnEstActionPerformed(evt);
            }
        });

        txtEstDes.setColumns(20);
        txtEstDes.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtEstDes.setRows(5);
        txtEstDes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEstDesKeyTyped(evt);
            }
        });
        jtxtEstDes.setViewportView(txtEstDes);

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel10.setText("¿Ha estado bajo medicacion en los ultimos años, aparte de los examenes de rutina?");
        jLabel10.setFocusable(false);

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel12.setText("¿Toma medicamentos Actualmente?");
        jLabel12.setFocusable(false);

        tbtnMed.setText("No");
        tbtnMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtnMedActionPerformed(evt);
            }
        });

        lblMedCuales.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lblMedCuales.setText("¿Cuales?");
        lblMedCuales.setFocusable(false);

        txtMedDes.setColumns(20);
        txtMedDes.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtMedDes.setRows(5);
        txtMedDes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMedDesKeyTyped(evt);
            }
        });
        jtxtMedDes.setViewportView(txtMedDes);

        jLabel14.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel14.setText("¿Ronca cuando duerme?");
        jLabel14.setFocusable(false);

        txtDolDes.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtDolDes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDolDesKeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel15.setText("Es alérgico a:");
        jLabel15.setFocusable(false);

        rbtnPolvo.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnPolvo.setText("Polvo");
        rbtnPolvo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnPolvoActionPerformed(evt);
            }
        });

        rbtnMed.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnMed.setText("Medicamentos");
        rbtnMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnMedActionPerformed(evt);
            }
        });

        rbtnAlimentos.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnAlimentos.setText("alimentos");
        rbtnAlimentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnAlimentosActionPerformed(evt);
            }
        });

        txtAlerDes.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtAlerDes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAlerDesActionPerformed(evt);
            }
        });
        txtAlerDes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAlerDesKeyTyped(evt);
            }
        });

        rbtnOtros.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnOtros.setText("Otros:");
        rbtnOtros.setFocusable(false);

        jLabel17.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel17.setText("¿Qué toma normalmente para el dolor de cabeza?");
        jLabel17.setFocusable(false);

        tbtnRonca.setText("No");
        tbtnRonca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtnRoncaActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel18.setText("¿Respira por la boca?");
        jLabel18.setFocusable(false);

        tbtnResp.setText("No");
        tbtnResp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtnRespActionPerformed(evt);
            }
        });

        cmbResCuando.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A veces", "De dia", "De noche" }));
        cmbResCuando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbResCuandoActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel19.setText("¿Se resfria con frecuencia?");
        jLabel19.setFocusable(false);

        tbtnResfrio.setText("No");
        tbtnResfrio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtnResfrioActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel20.setText("¿Sufre de agmigdalitis o sinussitis?");
        jLabel20.setFocusable(false);

        tbtnAmigd.setText("No");
        tbtnAmigd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtnAmigdActionPerformed(evt);
            }
        });

        txtMastDes.setColumns(20);
        txtMastDes.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtMastDes.setRows(5);
        txtMastDes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMastDesKeyTyped(evt);
            }
        });
        jtxtMastDes.setViewportView(txtMastDes);

        lblMastPorque.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lblMastPorque.setText("¿Porqué?");
        lblMastPorque.setFocusable(false);

        tbtnMast.setText("No");
        tbtnMast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtnMastActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel22.setText("¿Tiene dificultad para masticar o tragar?");
        jLabel22.setFocusable(false);

        jLabel23.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel23.setText("¿Ha sido tratado por un alergeologo o especialistas del oido, nariz o garganta ?");
        jLabel23.setFocusable(false);

        tbtnOrl.setText("No");
        tbtnOrl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtnOrlActionPerformed(evt);
            }
        });

        lblOrlPorque.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lblOrlPorque.setText("¿Porqué?");
        lblOrlPorque.setFocusable(false);

        txtOrlDes.setColumns(20);
        txtOrlDes.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        txtOrlDes.setRows(5);
        txtOrlDes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOrlDesKeyTyped(evt);
            }
        });
        jtxtOrlDes.setViewportView(txtOrlDes);

        rbtnCirugia.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnCirugia.setText("Cirugia nasal");
        rbtnCirugia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCirugiaActionPerformed(evt);
            }
        });

        rbtnAmigd.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnAmigd.setText("Amigdalectomía");
        rbtnAmigd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnAmigdActionPerformed(evt);
            }
        });

        rbtnAdenoi.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnAdenoi.setText("Adenoidectomía");
        rbtnAdenoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnAdenoiActionPerformed(evt);
            }
        });

        fchOrl.setOpaque(false);

        lblOrlCuando.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lblOrlCuando.setText("¿cuando?");
        lblOrlCuando.setFocusable(false);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(rbtnCirugia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnAmigd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnAdenoi))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                    .addComponent(jLabel23)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tbtnOrl))
                                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                    .addComponent(lblOrlPorque)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtxtOrlDes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblOrlCuando)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(fchOrl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(tbtnMast)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMastPorque)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtMastDes, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel22))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                        .addComponent(tbtnEst)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblEstPorque)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtEstDes, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel15)
                                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                        .addComponent(tbtnMed)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblMedCuales)
                                        .addGap(18, 18, 18)
                                        .addComponent(jtxtMedDes, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtDolDes, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPane1Layout.createSequentialGroup()
                                            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(rbtnOtros)
                                                .addComponent(rbtnPolvo))
                                            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(rbtnMed)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(rbtnAlimentos))
                                                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                                    .addGap(57, 57, 57)
                                                    .addComponent(txtAlerDes, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(55, 55, 55)
                                .addComponent(tbtnResp))
                            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                    .addComponent(jLabel19)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tbtnResfrio))
                                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                    .addComponent(jLabel14)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tbtnRonca))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tbtnAmigd)
                                .addGap(133, 133, 133))
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(cmbResCuando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tbtnEst)
                        .addComponent(lblEstPorque))
                    .addComponent(jtxtEstDes, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tbtnMed)
                        .addComponent(lblMedCuales))
                    .addComponent(jtxtMedDes, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDolDes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnPolvo)
                    .addComponent(rbtnMed)
                    .addComponent(rbtnAlimentos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAlerDes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtnOtros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbtnRonca)
                    .addComponent(jLabel14)
                    .addComponent(jLabel20)
                    .addComponent(tbtnAmigd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbtnResfrio)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(tbtnResp)
                    .addComponent(cmbResCuando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tbtnMast)
                        .addComponent(lblMastPorque))
                    .addComponent(jtxtMastDes, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(tbtnOrl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOrlPorque)
                            .addComponent(jtxtOrlDes, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fchOrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtnCirugia)
                            .addComponent(rbtnAmigd)
                            .addComponent(rbtnAdenoi)))
                    .addComponent(lblOrlCuando))
                .addContainerGap())
        );
        jLayeredPane1.setLayer(lblEstPorque, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(tbtnEst, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jtxtEstDes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(tbtnMed, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblMedCuales, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jtxtMedDes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtDolDes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(rbtnPolvo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(rbtnMed, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(rbtnAlimentos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtAlerDes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(rbtnOtros, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel17, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(tbtnRonca, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(tbtnResp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(cmbResCuando, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel19, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(tbtnResfrio, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel20, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(tbtnAmigd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jtxtMastDes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblMastPorque, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(tbtnMast, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel22, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel23, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(tbtnOrl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblOrlPorque, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jtxtOrlDes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(rbtnCirugia, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(rbtnAmigd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(rbtnAdenoi, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(fchOrl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblOrlCuando, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Historia Médica");
        jLabel8.setFocusable(false);

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel9.setText("Ha padecido alguna vez:");
        jLabel9.setFocusable(false);

        rbtnasma.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnasma.setText("Asma");
        rbtnasma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnasmaActionPerformed(evt);
            }
        });

        rbtndiabetes.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtndiabetes.setText("Diabetes");
        rbtndiabetes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtndiabetesActionPerformed(evt);
            }
        });

        rbtnanemia.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnanemia.setText("Anemia");
        rbtnanemia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnanemiaActionPerformed(evt);
            }
        });

        rbtnherpes.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnherpes.setText("Herpes");
        rbtnherpes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnherpesActionPerformed(evt);
            }
        });

        rbtnepilepsia.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnepilepsia.setText("Epilepsia");
        rbtnepilepsia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnepilepsiaActionPerformed(evt);
            }
        });

        rbtnhepatitis.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnhepatitis.setText("Hepatitis");
        rbtnhepatitis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnhepatitisActionPerformed(evt);
            }
        });

        rbtnecardiaca.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnecardiaca.setText("Enfermedad cardiaca");
        rbtnecardiaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnecardiacaActionPerformed(evt);
            }
        });

        rbtnhipertencion.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnhipertencion.setText("Hipertencion");
        rbtnhipertencion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnhipertencionActionPerformed(evt);
            }
        });

        rbtnesanguinea.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnesanguinea.setText("Enfermedad Sanguínea");
        rbtnesanguinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnesanguineaActionPerformed(evt);
            }
        });

        rbtnpendcrino.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnpendcrino.setText(" Problema endocrino");
        rbtnpendcrino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnpendcrinoActionPerformed(evt);
            }
        });

        rbtnfreumatica.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnfreumatica.setText("Fiebre Reumática");
        rbtnfreumatica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnfreumaticaActionPerformed(evt);
            }
        });

        rbtntoseos.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtntoseos.setText("Trastornos óseos");
        rbtntoseos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtntoseosActionPerformed(evt);
            }
        });

        rbtndcerebral.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtndcerebral.setText("Daño Cerebral o Facial");
        rbtndcerebral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtndcerebralActionPerformed(evt);
            }
        });

        rbtnpemocionales.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        rbtnpemocionales.setText("Problemas Emocionales");
        rbtnpemocionales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnpemocionalesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(rbtnecardiaca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnhipertencion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnesanguinea)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnpendcrino))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(rbtnfreumatica)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtntoseos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtndcerebral)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnpemocionales))
                    .addComponent(jLabel9)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(rbtnasma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtndiabetes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnherpes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(rbtnanemia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnepilepsia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtnhepatitis)))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnasma)
                    .addComponent(rbtndiabetes)
                    .addComponent(rbtnherpes)
                    .addComponent(rbtnanemia)
                    .addComponent(rbtnepilepsia)
                    .addComponent(rbtnhepatitis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnecardiaca)
                    .addComponent(rbtnhipertencion)
                    .addComponent(rbtnesanguinea)
                    .addComponent(rbtnpendcrino))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnfreumatica)
                    .addComponent(rbtntoseos)
                    .addComponent(rbtndcerebral)
                    .addComponent(rbtnpemocionales))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 42, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnguardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/aceptar2.png"))); // NOI18N
        btnguardar.setToolTipText("Guardar");
        btnguardar.setContentAreaFilled(false);
        btnguardar.setDefaultCapable(false);
        btnguardar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/aceptar3.png"))); // NOI18N
        btnguardar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/aceptar1.png"))); // NOI18N
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        btnlimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/limpiar2.png"))); // NOI18N
        btnlimpiar.setToolTipText("Limpiar");
        btnlimpiar.setContentAreaFilled(false);
        btnlimpiar.setDefaultCapable(false);
        btnlimpiar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/limpiar3.png"))); // NOI18N
        btnlimpiar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/limpiar1.png"))); // NOI18N
        btnlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimpiarActionPerformed(evt);
            }
        });

        btnbuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/buscar2.png"))); // NOI18N
        btnbuscar.setToolTipText("Buscar");
        btnbuscar.setContentAreaFilled(false);
        btnbuscar.setDefaultCapable(false);
        btnbuscar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/buscar3.png"))); // NOI18N
        btnbuscar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/buscar1.png"))); // NOI18N
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });

        btnactualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/actualizar2.png"))); // NOI18N
        btnactualizar.setToolTipText("Actualizar");
        btnactualizar.setContentAreaFilled(false);
        btnactualizar.setDefaultCapable(false);
        btnactualizar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/actualizar3.png"))); // NOI18N
        btnactualizar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/actualizar1.png"))); // NOI18N
        btnactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizarActionPerformed(evt);
            }
        });

        btneliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/borrar2.png"))); // NOI18N
        btneliminar.setToolTipText("Eliminar");
        btneliminar.setContentAreaFilled(false);
        btneliminar.setDefaultCapable(false);
        btneliminar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/borrar3.png"))); // NOI18N
        btneliminar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/borrar1.png"))); // NOI18N
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        btncancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/cancelar2.png"))); // NOI18N
        btncancelar.setToolTipText("Salir");
        btncancelar.setContentAreaFilled(false);
        btncancelar.setDefaultCapable(false);
        btncancelar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/cancelar3.png"))); // NOI18N
        btncancelar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/botones/cancelar3.png"))); // NOI18N
        btncancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnguardar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(btnlimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnactualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btneliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btncancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btncancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btneliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnbuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnlimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnguardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnactualizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(155, Short.MAX_VALUE))
        );

        jScrollPane5.setViewportView(jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1094, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        Maestro.cerrarVentana(this);
    }//GEN-LAST:event_formInternalFrameClosed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened

    private void rbtnasmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnasmaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnasmaActionPerformed

    private void rbtndiabetesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtndiabetesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtndiabetesActionPerformed

    private void rbtnanemiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnanemiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnanemiaActionPerformed

    private void rbtnherpesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnherpesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnherpesActionPerformed

    private void rbtnepilepsiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnepilepsiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnepilepsiaActionPerformed

    private void rbtnhepatitisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnhepatitisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnhepatitisActionPerformed

    private void rbtnecardiacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnecardiacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnecardiacaActionPerformed

    private void rbtnhipertencionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnhipertencionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnhipertencionActionPerformed

    private void rbtnesanguineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnesanguineaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnesanguineaActionPerformed

    private void rbtnpendcrinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnpendcrinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnpendcrinoActionPerformed

    private void rbtnfreumaticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnfreumaticaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnfreumaticaActionPerformed

    private void rbtntoseosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtntoseosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtntoseosActionPerformed

    private void rbtndcerebralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtndcerebralActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtndcerebralActionPerformed

    private void rbtnpemocionalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnpemocionalesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnpemocionalesActionPerformed

    private void tbtnEstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtnEstActionPerformed
        // TODO add your handling code here:
        configurarTbtnEst();        
    }//GEN-LAST:event_tbtnEstActionPerformed

    private void tbtnMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtnMedActionPerformed
        // TODO add your handling code here:
        configurarTbtnMed();        
    }//GEN-LAST:event_tbtnMedActionPerformed

    private void rbtnPolvoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnPolvoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnPolvoActionPerformed

    private void rbtnMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnMedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnMedActionPerformed

    private void rbtnAlimentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnAlimentosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnAlimentosActionPerformed

    private void txtAlerDesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAlerDesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAlerDesActionPerformed

    private void tbtnRoncaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtnRoncaActionPerformed
        // TODO add your handling code here:
        configurarTbtnRonca();        
    }//GEN-LAST:event_tbtnRoncaActionPerformed

    private void tbtnRespActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtnRespActionPerformed
        // TODO add your handling code here:
        configurarTbtnResp();
    }//GEN-LAST:event_tbtnRespActionPerformed

    private void cmbResCuandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbResCuandoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbResCuandoActionPerformed

    private void tbtnResfrioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtnResfrioActionPerformed
        // TODO add your handling code here:
        configurarTbtnResfrio();                
    }//GEN-LAST:event_tbtnResfrioActionPerformed

    private void tbtnAmigdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtnAmigdActionPerformed
        // TODO add your handling code here:
        configurarTbtnAmigd();
    }//GEN-LAST:event_tbtnAmigdActionPerformed

    private void tbtnMastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtnMastActionPerformed
        // TODO add your handling code here:
        configurarTbtnMast();
    }//GEN-LAST:event_tbtnMastActionPerformed

    private void tbtnOrlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtnOrlActionPerformed
        // TODO add your handling code here:
        configurarTbtnOrl();
    }//GEN-LAST:event_tbtnOrlActionPerformed

    private void rbtnCirugiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCirugiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnCirugiaActionPerformed

    private void rbtnAmigdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnAmigdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnAmigdActionPerformed

    private void rbtnAdenoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnAdenoiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnAdenoiActionPerformed

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        guardar();
    }//GEN-LAST:event_btnguardarActionPerformed

    private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed
        leerdatos();
        buscar();
    }//GEN-LAST:event_btnbuscarActionPerformed

    private void btnactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizarActionPerformed
        actualizar();
    }//GEN-LAST:event_btnactualizarActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        deshabilitarHist();
    }//GEN-LAST:event_btneliminarActionPerformed

    private void btncancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btncancelarActionPerformed

    private void btnlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimpiarActionPerformed
        // TODO add your handling code here:
        inicializarAtributos();
        limpiarPantalla();
        obtenerNroHistorial();
        

    }//GEN-LAST:event_btnlimpiarActionPerformed

    private void txtNroHistFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNroHistFocusGained
        // TODO add your handling code here:
        focoBusq="nroHistorial";
        txtNroHist.select(0, txtNroHist.getText().length());
      
    }//GEN-LAST:event_txtNroHistFocusGained

    private void txtcedulaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcedulaFocusGained
        // TODO add your handling code here:
        focoBusq="nroCedula";
        txtcedula.selectAll();
                
    }//GEN-LAST:event_txtcedulaFocusGained

    private void txtNroHistFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNroHistFocusLost
        // TODO add your handling code here:
        txtNroHist.setText(nroHistFormateado(Integer.valueOf(txtNroHist.getText())));
    }//GEN-LAST:event_txtNroHistFocusLost

    private void txtNroHistKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNroHistKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNroHistKeyPressed

    private void txtNroHistKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNroHistKeyTyped
        // TODO add your handling code here:
        
        validarDigitos(txtNroHist,evt);
        
    }//GEN-LAST:event_txtNroHistKeyTyped

    private void txtNroHistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNroHistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNroHistActionPerformed

    private void txtcedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcedulaKeyTyped
        // TODO add your handling code here:
        validarDigitos(txtcedula,evt);
        
         //validarCedula(txtcedula,evt);
       
    }//GEN-LAST:event_txtcedulaKeyTyped

    private void txtEstDesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstDesKeyTyped
        // TODO add your handling code here:
        validarLimite(txtEstDes, evt, 30);
    }//GEN-LAST:event_txtEstDesKeyTyped

    private void txtMedDesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMedDesKeyTyped
        // TODO add your handling code here:
        validarLimite(txtMedDes, evt, 30);
    }//GEN-LAST:event_txtMedDesKeyTyped

    private void txtDolDesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDolDesKeyTyped
        // TODO add your handling code here:
        validarLimite(txtDolDes, evt, 30);
    }//GEN-LAST:event_txtDolDesKeyTyped

    private void txtAlerDesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAlerDesKeyTyped
        // TODO add your handling code here:
        validarLimite(txtAlerDes, evt, 36);
    }//GEN-LAST:event_txtAlerDesKeyTyped

    private void txtMastDesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMastDesKeyTyped
        // TODO add your handling code here:
        validarLimite(txtMastDes, evt, 30);
    }//GEN-LAST:event_txtMastDesKeyTyped

    private void txtOrlDesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrlDesKeyTyped
        // TODO add your handling code here:
        validarLimite(txtOrlDes, evt, 30);
    }//GEN-LAST:event_txtOrlDesKeyTyped

    private void configurar_fecha(JDateChooser calendario){/* configura el rango de fecha seleccionable */
        Date hoy = new Date();
        calendario.setMaxSelectableDate(hoy);//establece como fecha maxima hoy
        Date hace120= new Date();
        hace120.setYear(hace120.getYear()-120);// resta 120 años a la fecha actual
        calendario.setMinSelectableDate(hace120);//establece como fecha minima hace120 años
    }
    private void buscarpaciente(String cedula){
        ConexionMySQL mysql =new ConexionMySQL();
        Connection cn=mysql.Conectar();
        String sSQL = "";
        String mensaje = "";
        
        sSQL = "select pac_paciente,pac_tipocedula,pac_cedula,pac_nombres,pac_apellidos,pac_direccion,pac_fecha,pac_codtmovil,pac_numtmovil,pac_sexo from paciente where CONCAT(pac_tipocedula,pac_cedula)like '"+cedula+"'";
    
        try
        {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
           
          
            if(!rs.next()){
                JOptionPane.showMessageDialog(null, "Paciente no encontrado");
                
            }else{
                pacID=rs.getString("pac_paciente");
                pacCedula=rs.getString("pac_cedula");
                tPacCedula=rs.getString("pac_tipocedula");                                
                pacNombre=rs.getString("pac_nombres")+" "+rs.getString("pac_apellidos");
                pacDireccion=rs.getString("pac_direccion");
                pacEdad=String.valueOf(calcularEdad(mysqlDateAJavaDate(rs.getString("pac_fecha"))));
                pacTelefono=rs.getString("pac_codtmovil")+"-"+rs.getString("pac_numtmovil");
                pacSexo=rs.getString("pac_sexo");
                txtNombre.setText(pacNombre);
                txtcedula.setText(pacCedula);
                setCmbTCedPac();                
                txtDomicilio.setText(pacDireccion);
                txtEdad.setText(pacEdad);
                txtTelefono.setText(pacTelefono);
                if(pacSexo.equals("M")){
                    cmbSexo.setSelectedIndex(0);
                }else{
                    cmbSexo.setSelectedIndex(1);
                    
                }
                
                
                        
            }
        } 
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        
    }
    private void obtenerNroHistorial(){
        String sSQL = "";
        ConexionMySQL mysql = new ConexionMySQL();
        Connection cn = mysql.Conectar();
        sSQL = " SELECT max( `hist_nro` ) hist_nro FROM `historia_clinica` ";
                try
        {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
           
          if(!rs.next()){
                JOptionPane.showMessageDialog(null, "Paciente no encontrado");
                
            }
            nroHistoria=rs.getInt("hist_nro");
            txtNroHist.setText(nroHistFormateado(nroHistoria+1));

            
        } 
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    private void guardar(){
        ConexionMySQL mysql = new ConexionMySQL();
        Connection cn = mysql.Conectar();
        String sSQL = "";
        String mensaje = "";
        String codpre1="",codpre2="",codpre3="",codpre4="",codpre5="";
        leerdatos();
        if(pre_est){
            codpre1=pacCedula;
        }else{
        codpre1=null;
        }
        if(pre_med){
            codpre2=pacCedula;
        }else{
        codpre2=null;
        }
        if(pre_RespiraBoca){
            codpre3=pacCedula;
        }else{
        codpre3=null;
        }
        if(pre_mas){
            codpre4=pacCedula;
        }else{
        codpre4=null;
        }
        if(pre_orl){
            codpre5=pacCedula;
        }else{
        codpre5=null;
        }
        

       

        //if(validar()==1&&UsuarioRep()==0){
        if(histRep()==0){  
        /*comeinza a insetar la tabla si esta          
         
         */
        if(pre_est){
            sSQL = "INSERT INTO `pregunta_estacion_med`(`pre_id1`, `pre_descripcion`) VALUES (?,?)";
            mensaje = "Estacio medica datos se han Insertado de Manera Satisfactoria...";
            try
            {
            PreparedStatement pst = cn.prepareStatement(sSQL);
            pst.setString(1, codpre1);
            pst.setString(2, pre_est_des);

            int n = pst.executeUpdate();

            if(n > 0)
            {
                JOptionPane.showMessageDialog(null, mensaje);
                
            }
        }
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null,mensaje+ ex);
        }
        }
        if(pre_med){
            sSQL = "INSERT INTO `pregunta_medicamentos`(`pre_id2`, `pre_descripcion`) VALUES (?,?)";
            mensaje = "roma medicamentos datos se han Insertado de Manera Satisfactoria...";
            try
            {
            PreparedStatement pst = cn.prepareStatement(sSQL);
            pst.setString(1, codpre2);
            pst.setString(2, pre_med_des);

            int n = pst.executeUpdate();

            if(n > 0)
            {
                JOptionPane.showMessageDialog(null, mensaje);
                
            }
        }
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, mensaje+ex);
        }
        }
        if(pre_dol){
            sSQL = "INSERT INTO `pregunta_dolor_cabeza`(`pre_id3`, `pre_descripcion`) VALUES (?,?)";
            mensaje = "Dolor de cabeza datos se han Insertado de Manera Satisfactoria...";
            try
            {
            PreparedStatement pst = cn.prepareStatement(sSQL);
            pst.setString(1, codpre3);
            pst.setString(2, pre_dol_des); 

            int n = pst.executeUpdate();

            if(n > 0)
            {
                JOptionPane.showMessageDialog(null, mensaje);
                
            }
        }
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, pre_dol_des+mensaje+ex);
        }
        }
        if(pre_mas){
            sSQL = "INSERT INTO `pregunta_dificultad_mas`(`pre_id4`, `pre_descripcion`) VALUES (?,?)";
            mensaje = "Pregunata masticar datos se han Insertado de Manera Satisfactoria...";
            try
            {
            PreparedStatement pst = cn.prepareStatement(sSQL);
            pst.setString(1, codpre4);
            pst.setString(2, pre_mas_des); 

            int n = pst.executeUpdate();

            if(n > 0)
            {
                JOptionPane.showMessageDialog(null, mensaje);
                
            }
        }
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, mensaje+ex);
        }
        }
        if(pre_orl){
            sSQL = "INSERT INTO `pregunta_orl`(`pre_id5`, `pre_descripcion`, `pre_cuando`, `pre_operacion`) VALUES (?,?,?,?)";
            mensaje = "Orl datos se han Insertado de Manera Satisfactoria...";
            try
            {
            PreparedStatement pst = cn.prepareStatement(sSQL);
            pst.setString(1, codpre5);
            pst.setString(2, pre_orl_des);
            pst.setString(3, javaDateAMysqlDate(pre_orl_fecha));
            pst.setString(4, pre_orlOpc); 

            int n = pst.executeUpdate();

            if(n > 0)
            {
                JOptionPane.showMessageDialog(null, mensaje);
                
            }
        }
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null,mensaje+ ex);
        }
        }
        /*
        fin de la insercion en las tablas externas
        */
        /*
        se comienza a insertar en la tabla de historial
        */
        sSQL = "INSERT INTO `historia_clinica`(`hist_nro`, `hist_pac_paciente`,"
                + " `hist_Estado`, `hist_enfermedades`, `pre_id1`, `pre_id2`, `pre_id3`,"
                + " `hist_alergia`, `hist_ronca`, `hist_respira_boca`, `hist_resfrio`, "
                + "`hist_ad_sinus`, `pre_id4`, `pre_id5`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
        mensaje = "Historial se han Insertado de Manera Satisfactoria...";
        try
        {
            PreparedStatement pst = cn.prepareStatement(sSQL);
            histEstado=true;
            pst.setInt(1, nroHistoria);
            pst.setString(2, pacID);
            pst.setBoolean(3, histEstado);
            pst.setString(4, String.valueOf(enfermedades));
            pst.setString(5, codpre1);
            pst.setString(6, codpre2);
            pst.setString(7, codpre3);
            pst.setString(8, preAlergiaOpc+","+preAlergia); 
            pst.setBoolean(9, preRonca);
            pst.setInt(10, preRespOpc);
            pst.setBoolean(11, preResfrio);
            pst.setBoolean(12, preAdm_sin);
            pst.setString(13, codpre4);
            pst.setString(14 , codpre5);

            int n = pst.executeUpdate();

            if(n > 0)
            {
                JOptionPane.showMessageDialog(null, mensaje);
                
            }
        }
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        }
    
    }
    private void actualizar(){
        ConexionMySQL mysql = new ConexionMySQL();
        Connection cn = mysql.Conectar();
        String sSQL = "";
        String mensaje = "";
        String codpre1="",codpre2="",codpre3="",codpre4="",codpre5="",id=pacID;
        
        inicializarAtributos();
        leerdatos();
        if(existeNroHist(nroHistoria)){        
        if(pre_est){
            codpre1=pacCedula;
        }else{
        codpre1=null;
        }
        if(pre_med){
            codpre2=pacCedula;
        }else{
        codpre2=null;
        }
        if(pre_RespiraBoca){
            codpre3=pacCedula;
        }else{
        codpre3=null;
        }
        if(pre_mas){
            codpre4=pacCedula;
        }else{
        codpre4=null;
        }
        if(pre_orl){
            codpre5=pacCedula;
        }else{
        codpre5=null;
        }
        

       

        //if(validar()==1&&UsuarioRep()==0){
        
        /*comeinza a insetar la tabla si esta          
         
         */
        if(pre_est){
            sSQL = "UPDATE pregunta_estacion_med SET pre_id1= ?, pre_descripcion= ?  where (pre_id1 like '"+codpre1+"')";
            mensaje = "Estacio medica datos UPDATE se han Insertado de Manera Satisfactoria...";
            try
            {
            PreparedStatement pst = cn.prepareStatement(sSQL);
            pst.setString(1, codpre1);
            pst.setString(2, pre_est_des);

            int n = pst.executeUpdate();

            if(n > 0)
            {
                JOptionPane.showMessageDialog(null, mensaje);
                
            }
        }
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null,mensaje+ ex);
        }
        }
        if(pre_med){
            sSQL = "UPDATE pregunta_medicamentos SET pre_id2= ?, pre_descripcion= ? where (pre_id2 like '"+codpre2+"')";            
            mensaje = "Toma medicamentos datos UPDATE se han Insertado de Manera Satisfactoria...";
            try
            {
            
            PreparedStatement pst = cn.prepareStatement(sSQL);
            pst.setString(1, codpre2);
            pst.setString(2, pre_med_des);

            int n = pst.executeUpdate();


            if(n > 0)
            {
                JOptionPane.showMessageDialog(null, mensaje);
                
            }
        }
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, mensaje+ex);
        }
        }
        if(pre_dol){
            sSQL = "UPDATE pregunta_dolor_cabeza SET pre_id3= ?, pre_descripcion= ? where (pre_id3 like '"+codpre3+"')";
            mensaje = "Dolor de cabeza datos UPDATE se han Insertado de Manera Satisfactoria...";
            try
            {
            PreparedStatement pst = cn.prepareStatement(sSQL);
            pst.setString(1, codpre3);
            pst.setString(2, pre_dol_des); 

            int n = pst.executeUpdate();

            if(n > 0)
            {
                JOptionPane.showMessageDialog(null, mensaje);
                
            }
        }
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        }
        if(pre_mas){
            sSQL = "UPDATE pregunta_dificultad_mas SET pre_id4= ?, pre_descripcion= ? where (pre_id4 like '"+codpre4+"')";
            mensaje = "Pregunata masticar datos UPDATE se han Insertado de Manera Satisfactoria...";
            try
            {
            PreparedStatement pst = cn.prepareStatement(sSQL);
            pst.setString(1, codpre4);
            pst.setString(2, pre_mas_des); 

            int n = pst.executeUpdate();

            if(n > 0)
            {
                JOptionPane.showMessageDialog(null, mensaje);
                
            }
        }
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, mensaje+ex);
        }
        }
        if(pre_orl){
            sSQL = "UPDATE pregunta_orl SET pre_id5= ?, pre_descripcion= ?, pre_cuando=?, pre_operacion=? where (pre_id5 like '"+codpre5+"')";
            mensaje = "Orl datos UPDATE se han Insertado de Manera Satisfactoria...";
            try
            {
            PreparedStatement pst = cn.prepareStatement(sSQL);
            pst.setString(1, codpre5);
            pst.setString(2, pre_orl_des);
            pst.setString(3, javaDateAMysqlDate(pre_orl_fecha));
            pst.setString(4, pre_orlOpc);

            int n = pst.executeUpdate();

            if(n > 0)
            {
                JOptionPane.showMessageDialog(null, mensaje);
                
            }
        }
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null,mensaje+ ex);
        }
        }
        /*
        fin de la insercion en las tablas externas
        */
        /*
        se comienza a insertar en la tabla de historial
        */
        sSQL ="UPDATE `historia_clinica` SET `hist_enfermedades`=?,`pre_id1`=?,"
                + "`pre_id2`=?,`pre_id3`=?,`hist_alergia`=?,"
                + "`hist_ronca`=?,`hist_respira_boca`=?,`hist_resfrio`=?,"
                + "`hist_ad_sinus`=?,`pre_id4`=?,`pre_id5`=? where ( hist_nro like '"+nroHistoria +"')";

        mensaje = "Historial se han ACTUALIZADO de Manera Satisfactoria...";
        try
        {
            PreparedStatement pst = cn.prepareStatement(sSQL);
            pst.setString(1, String.valueOf(enfermedades));
            pst.setString(2, codpre1);
            pst.setString(3, codpre2);
            pst.setString(4, codpre3);
            pst.setString(5, preAlergiaOpc+","+preAlergia); 
            pst.setBoolean(6, preRonca);
            pst.setInt(7, preRespOpc);
            pst.setBoolean(8, preResfrio);
            pst.setBoolean(9, preAdm_sin);
            pst.setString(10, codpre4);
            pst.setString(11 , codpre5);

            int n = pst.executeUpdate();

            if(n > 0)
            {
                JOptionPane.showMessageDialog(null, mensaje);
                
            }
        }
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        }
    }
    private void buscar(){
        ConexionMySQL mysql =new ConexionMySQL();
        Connection cn=mysql.Conectar();
        String sSQL = "",sSQFinal="";
        String mensaje = "";
        
        
        /*Comienza a verifica las tablas activas para el paciente actual */
        sSQL = "SELECT pre_id1,pre_id2,pre_id3,pre_id4,pre_id5 FROM historia_clinica hist ";
        if(focoBusq.equals("nroHistorial")){
            sSQL+= "where ( hist.hist_nro like '"+nroHistoria +"')";
            mensaje="Historia no encontrada";
        }
        if(focoBusq.equals("nroCedula")){
            sSQL+=",paciente where (hist.hist_pac_paciente = pac_paciente) and (CONCAT(pac_tipocedula,pac_cedula)like '"+tPacCedula+pacCedula+"')";
            mensaje="Paciente no encontrado";
        }
        System.out.println("la sentencia sql es: "+sSQL);
    
        try
        {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
           
          
            if(rs.next()){
                              
                String estadoPre[]={"","","","",""};
                estadoPre[0]=rs.getString("pre_id1");
                pre_est =noNulo(estadoPre[0]);
                estadoPre[1]=rs.getString("pre_id2");
                pre_med=noNulo(estadoPre[1]);;
                estadoPre[2]=rs.getString("pre_id3");
                pre_dol=noNulo(estadoPre[2]);
                estadoPre[3]=rs.getString("pre_id4");
                pre_mas=noNulo(estadoPre[3]);;
                estadoPre[4]=rs.getString("pre_id5");
                pre_orl=noNulo(estadoPre[4]);
                                       
            }
        } 
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        cargarDatos();
        if((!esHistEliminada()&&tienePacHistoria()==1)||focoBusq.equals("nroHistorial")){
        /*Termina de verifica las tablas activas para el paciente actual */
        sSQL="";
        sSQL="select * from historia_clinica hist,paciente";
        sSQFinal=" where (hist.hist_pac_paciente = pac_paciente)";  
                
        if(focoBusq.equals("nroHistorial")){
            sSQFinal+= " and (hist.hist_nro like '"+nroHistoria +"')";
        }
        if(focoBusq.equals("nroCedula")){
            sSQFinal+=" and (CONCAT(pac_tipocedula,pac_cedula)like '"+tPacCedula+pacCedula+"')";
        }
        
        if(pre_est){
            sSQL+=",pregunta_estacion_med pre1";
            sSQFinal+=" and (hist.pre_id1 = pre1.pre_id1)";
        }
        if(pre_med){
            sSQL+=",pregunta_medicamentos pre2";
            sSQFinal+=" and (hist.pre_id2 = pre2.pre_id2)";
        }
        if(pre_dol){
            sSQL+=",pregunta_dolor_cabeza pre3";
            sSQFinal+=" and (hist.pre_id3 = pre3.pre_id3)";
        }
        if(pre_mas){
            sSQL+=",pregunta_dificultad_mas pre4";
            sSQFinal+=" and (hist.pre_id4 = pre4.pre_id4)";
        }
        if(pre_orl){
            sSQL+=",pregunta_orl pre5";
            sSQFinal+=" and (hist.pre_id5 = pre5.pre_id5)";
        }
        sSQL+=sSQFinal;
         System.out.println("la sentencia sql es: "+sSQL);
            
        try{
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
           
          
            if(!rs.next()){
                JOptionPane.showMessageDialog(null, mensaje);
                
            }else{
                pacID=rs.getString("pac_paciente");
                pacCedula=rs.getString("pac_cedula");
                tPacCedula=rs.getString("pac_tipocedula");
                pacNombre=rs.getString("pac_nombres")+" "+rs.getString("pac_apellidos");
                pacDireccion=rs.getString("pac_direccion");
                pacEdad=String.valueOf(calcularEdad(mysqlDateAJavaDate(rs.getString("pac_fecha"))));
                pacTelefono=rs.getString("pac_codtmovil")+"-"+rs.getString("pac_numtmovil");
                pacSexo=rs.getString("pac_sexo");
                
                nroHistoria=rs.getInt("hist_nro");
                enfermedades=rs.getLong("hist_enfermedades");                
                preAlergiaOpc=splitAlergias(rs.getString("hist_alergia"))[0];
                preAlergia=splitAlergias(rs.getString("hist_alergia"))[1];
                preRonca=rs.getBoolean("hist_ronca");
                preRespOpc=rs.getInt("hist_respira_boca");
                preResfrio=rs.getBoolean("hist_resfrio");
                preAdm_sin=rs.getBoolean("hist_ad_sinus");
                
                
                
                
                if(pre_est){
                    pre_est_des=rs.getString("pre1.pre_descripcion");
                }
                if(pre_med){
                    pre_med_des=rs.getString("pre2.pre_descripcion");
                }
                if(pre_dol){
                    pre_dol_des=rs.getString("pre3.pre_descripcion");
                }
                if(pre_mas){
                    pre_mas_des=rs.getString("pre4.pre_descripcion");
                }
                if(pre_orl){
                    pre_orl_des=rs.getString("pre5.pre_descripcion");
                    pre_orl_fecha=mysqlDateAJavaDate(rs.getString("pre5.pre_cuando"));
                    pre_orlOpc=rs.getString("pre5.pre_operacion");
                    
                }
                
                
                
                                       
            }
        } 
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        cargarDatos();
        btnactualizar.setEnabled(true);
        btneliminar.setEnabled(true);
        }
    }
    private void deshabilitarHist(){
    String cedula="",sSQL="";
    leerdatos();
    ConexionMySQL mysql =new ConexionMySQL();
        Connection cn=mysql.Conectar();

        sSQL="UPDATE historia_clinica SET hist_Estado = FALSE WHERE hist_nro ='"+nroHistoria+"'";
        try {
            PreparedStatement pst=cn.prepareStatement(sSQL);
            int n=pst.executeUpdate();
            if(n>0){
                JOptionPane.showMessageDialog(null,"Historia eliminada Satisfactoriamente");
            }
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
    }
    private void habilitarHist(){
    String cedula="",sSQL="";
    leerdatos();
    ConexionMySQL mysql =new ConexionMySQL();
        Connection cn=mysql.Conectar();

        sSQL="UPDATE historia_clinica SET hist_Estado =TRUE WHERE hist_nro ='"+nroHistoria+"'";
        try {
            PreparedStatement pst=cn.prepareStatement(sSQL);
            int n=pst.executeUpdate();
            if(n>0){
                JOptionPane.showMessageDialog(null,"Historia habilitada Satisfactoriamente");
            }
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
    }
    private boolean esHistEliminada(){
    String cedula="",sSQL="";
    leerdatos();
    ConexionMySQL mysql =new ConexionMySQL();
        Connection cn=mysql.Conectar();

        sSQL="SELECT hist_Estado FROM historia_clinica  WHERE (hist_nro ="+nroHistoria+") and (hist_Estado =FALSE)";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
           
          
            if(rs.next()){

                int opc=JOptionPane.showOptionDialog(null, "La historia esta Deshabilitada desea habilitarla?","Habilitar Historia" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[] { "Si", "No"}, "Si");
                if (JOptionPane.OK_OPTION == opc){
                    habilitarHist();
                }
                return true;                
            }
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
        return false;
    }
    private int tienePacHistoria(){
    String cedula="",sSQL="";
    leerdatos();
    ConexionMySQL mysql =new ConexionMySQL();
        Connection cn=mysql.Conectar();
        if(focoBusq.equals("nroCedula")){

        sSQL="select pac_cedula from historia_clinica hist,paciente where (hist.hist_pac_paciente = pac_paciente) and (CONCAT(pac_tipocedula,pac_cedula)like '"+tPacCedula+pacCedula+"')";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
           
            if(existePaciente()){
            if(!rs.next()){

                int opc=JOptionPane.showOptionDialog(null, "El paciente no tiene historia,¿Desea registrarlo en el historial?","Registro de Historial" , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[] { "Si", "No"}, "Si");
                if (JOptionPane.OK_OPTION == opc){
                    limpiarPantalla();
                    buscarpaciente(tPacCedula+pacCedula);
                    obtenerNroHistorial();
                    btnguardar.setEnabled(true);
                    btnactualizar.setEnabled(false);
                    btneliminar.setEnabled(false);
                    return 0 ;
                }
                                
            }else{
                return 1;
            }
        }
            else{
                    return -1;           

                }
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
        }
        return 9;
        
        
    }
    
    private boolean existeNroHist(int nroHist){
         String sSQL = "";
         int maximaNrohist=0;
        ConexionMySQL mysql = new ConexionMySQL();
        Connection cn = mysql.Conectar();
        sSQL = " SELECT max( `hist_nro` ) hist_nro FROM `historia_clinica` ";
                try
        {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
           
          if(!rs.next()){
                JOptionPane.showMessageDialog(null, "Historia no encontrada");
                
            }else{
            maximaNrohist=rs.getInt("hist_nro");
            if(nroHist<=maximaNrohist)
                return true;
            else
                return false;
          }
            
        } 
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        
        return false;
    
    }
    private boolean existePaciente(){
         String sSQL = "";
         int maximaNrohist=0;
        ConexionMySQL mysql = new ConexionMySQL();
        Connection cn = mysql.Conectar();
        sSQL = " SELECT pac_cedula FROM paciente where (CONCAT(pac_tipocedula,pac_cedula)like '"+tPacCedula+pacCedula+"')";
                try
        {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);
           
          if(!rs.next()){
                return false;
                
            }else            
                return true;
            
                

            
        } 
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        
        return false;
    
    }
    
    private void leerdatos(){/* lee los dats de la ventana */
        String preAlergiaOpcCont="",pre_orlOpcCont="",enfermedadesCont="";
        
       enfermedadesArray[0]=booleanAInt(rbtnasma.isSelected());
       enfermedadesArray[1]=booleanAInt(rbtndiabetes.isSelected());
       enfermedadesArray[2]=booleanAInt(rbtnherpes.isSelected());
       enfermedadesArray[3]=booleanAInt(rbtnanemia.isSelected());
       enfermedadesArray[4]=booleanAInt(rbtnepilepsia.isSelected()); 
       enfermedadesArray[5]=booleanAInt(rbtnhepatitis.isSelected());
       enfermedadesArray[6]=booleanAInt(rbtnecardiaca.isSelected());
       enfermedadesArray[7]=booleanAInt(rbtnhipertencion.isSelected());
       enfermedadesArray[8]=booleanAInt(rbtnesanguinea.isSelected());
       enfermedadesArray[9]=booleanAInt(rbtnpendcrino.isSelected());
       enfermedadesArray[10]=booleanAInt(rbtnfreumatica.isSelected());
       enfermedadesArray[11]=booleanAInt(rbtntoseos.isSelected());
       enfermedadesArray[12]=booleanAInt(rbtndcerebral.isSelected());
       enfermedadesArray[13]=booleanAInt(rbtnpemocionales.isSelected());
       for (int i=0;i<enfermedadesArray.length;i++)
           enfermedadesCont+=enfermedadesArray[i];
       enfermedades=Long.valueOf(enfermedadesCont);
       
       pacCedula= txtcedula.getText();
       getCmbTCedPac();
       pre_est=tbtnEst.isSelected();
       pre_med=tbtnMed.isSelected();
       pre_dol=!txtDolDes.getText().isEmpty();
       preRonca=tbtnRonca.isSelected();
       preResfrio=tbtnResfrio.isSelected();
       preAdm_sin=tbtnAmigd.isSelected();
       pre_RespiraBoca=tbtnResp.isSelected();
       pre_mas=tbtnMast.isSelected();
       pre_orl=tbtnOrl.isSelected();
       if(pre_est){
            pre_est_des= txtEstDes.getText();
        }else{
        pre_est_des="";
        }
        if(pre_med){
            pre_med_des= txtMedDes.getText();
        }else{
        pre_med_des="";
        }
        if(pre_mas){
            pre_mas_des= txtMastDes.getText();
        }else{
        pre_mas_des="";
        }
        if(pre_orl){
            pre_orl_des= txtOrlDes.getText();
        }else{
        pre_orl_des="";
        }
       if(!txtDolDes.getText().isEmpty())
           pre_dol_des= txtDolDes.getText();
       
       pre_orl_fecha=fchOrl.getDate();
       
        
        try{
                nroHistoria=Integer.valueOf(txtNroHist.getText());

        }catch(NumberFormatException ex){
            nroHistoria=0;
        }
        switch(cmbResCuando.getSelectedIndex()){
            case 0:
                preRespOpc=1;
                break;
            case 1:
                preRespOpc=2;
                break;
            case 2:
                preRespOpc=3;
                break;
                
        }
        if(rbtnPolvo.isSelected()){
            preAlergiaOpcArray[0]=1;            
        }else{
            preAlergiaOpcArray[0]=0;            
        }
        if(rbtnMed.isSelected()){
            preAlergiaOpcArray[1]=1;            
        }else{
            preAlergiaOpcArray[1]=0;  
        }
        if(rbtnAlimentos.isSelected()){
            preAlergiaOpcArray[2]=1;            
        }else{
            preAlergiaOpcArray[2]=0;  
        }
        for (int i=0;i<preAlergiaOpcArray.length;i++)
            preAlergiaOpc+=preAlergiaOpcArray[i];


        
        if(rbtnCirugia.isSelected()){
            pre_orlOpcArray[0]=1; 
        }else{
            pre_orlOpcArray[0]=0;
        }
        if(rbtnAmigd.isSelected()){
            pre_orlOpcArray[1]=1; 
        }else{
            pre_orlOpcArray[1]=0;
        }
        if(rbtnAdenoi.isSelected()){
            pre_orlOpcArray[2]=1; 
        }else{
            pre_orlOpcArray[2]=0;
        }
        for (int i=0;i<pre_orlOpcArray.length;i++)
            pre_orlOpc+=pre_orlOpcArray[i];
        
    }
   private void cargarDatos(){
       String preAlergiaOpcCont="",pre_orlOpcCont="",enfermedadesCont="";

       txtNombre.setText(pacNombre);
       txtcedula.setText(pacCedula);
       setCmbTCedPac();       
       txtDomicilio.setText(pacDireccion);
       txtEdad.setText(pacEdad);
       txtTelefono.setText(pacTelefono);
       if(pacSexo.equals("M")){
           cmbSexo.setSelectedIndex(0);
       }else{
           cmbSexo.setSelectedIndex(1);
       
       }
       txtNroHist.setText(nroHistFormateado(nroHistoria));
//       enfermedadesCont=String.valueOf(enfermedades);
  //     //JOptionPane.showMessageDialog(null, enfermedadesCont.);
    //   for(int i=0;i<enfermedadesCont.length();i++)
      //     enfermedadesArray[i]=Integer.valueOf(String.valueOf(enfermedadesCont.charAt(i)));
       enfermedadesArray=numAArray(enfermedades, 14);
       rbtnasma.setSelected(intABoolean(enfermedadesArray[0]));
       rbtndiabetes.setSelected(intABoolean(enfermedadesArray[1]));
       rbtnherpes.setSelected(intABoolean(enfermedadesArray[2]));
       rbtnanemia.setSelected(intABoolean(enfermedadesArray[3]));
       rbtnepilepsia.setSelected(intABoolean(enfermedadesArray[4]));
       rbtnhepatitis.setSelected(intABoolean(enfermedadesArray[5]));
       rbtnecardiaca.setSelected(intABoolean(enfermedadesArray[6]));
       rbtnhipertencion.setSelected(intABoolean(enfermedadesArray[7]));
       rbtnesanguinea.setSelected(intABoolean(enfermedadesArray[8]));
       rbtnpendcrino.setSelected(intABoolean(enfermedadesArray[9]));
       rbtnfreumatica.setSelected(intABoolean(enfermedadesArray[10]));
       rbtntoseos.setSelected(intABoolean(enfermedadesArray[11]));
       rbtndcerebral.setSelected(intABoolean(enfermedadesArray[12]));
       rbtnpemocionales.setSelected(intABoolean(enfermedadesArray[13]));
       
        
           txtEstDes.setText(pre_est_des);
       
           txtMedDes.setText(pre_med_des);
       
           txtDolDes.setText(pre_dol_des);
           txtAlerDes.setText(preAlergia);
       
           txtMastDes.setText(pre_mas_des);
       
           txtOrlDes.setText(pre_orl_des);
       tbtnEst.setSelected(pre_est);
       tbtnMed.setSelected(pre_med);       
       tbtnRonca.setSelected(preRonca);
       tbtnResfrio.setSelected(preResfrio);
       tbtnAmigd.setSelected(preAdm_sin);
       if(preRespOpc!=0)
           pre_RespiraBoca=true;
               else
           pre_RespiraBoca=false;
       tbtnResp.setSelected(pre_RespiraBoca);
       tbtnMast.setSelected(pre_mas);
       tbtnOrl.setSelected(pre_orl);
       fchOrl.setDate(pre_orl_fecha);
       cmbResCuando.setSelectedIndex(preRespOpc-1);

       
 //      preAlergiaOpcCont=String.valueOf(preAlergiaOpc);
   //    for(int i=0;i<preAlergiaOpcCont.length();i++)
     //      preAlergiaOpcArray[i]=Integer.valueOf(String.valueOf(preAlergiaOpcCont.charAt(i)));
       
        preAlergiaOpcArray=numAArray(preAlergiaOpc, 3);
        rbtnPolvo.setSelected(intABoolean(preAlergiaOpcArray[0]));
        rbtnMed.setSelected(intABoolean(preAlergiaOpcArray[1]));
        rbtnAlimentos.setSelected(intABoolean(preAlergiaOpcArray[2]));
        
        pre_orlOpcArray=numAArray(pre_orlOpc, 3);
        rbtnCirugia.setSelected(intABoolean(pre_orlOpcArray[0]));
        rbtnAmigd.setSelected(intABoolean(pre_orlOpcArray[1]));
        rbtnAdenoi.setSelected(intABoolean(pre_orlOpcArray[2]));
        configurarTbtnAmigd();
        configurarTbtnEst();
        configurarTbtnMast();
        configurarTbtnMed();
        configurarTbtnOrl();
        configurarTbtnResfrio();
        configurarTbtnResp();
        configurarTbtnRonca();
        
        
               
               
       
       
           
       
       
   }
   private void limpiarPantalla(){
       btnactualizar.setEnabled(false);
       btnguardar.setEnabled(false);
       btneliminar.setEnabled(false);
       txtNombre.setText("");
       txtcedula.setText("");
       cmbTCedPac.setSelectedIndex(0);
       txtDomicilio.setText("");
       txtEdad.setText("");
       txtTelefono.setText("");
       cmbSexo.setSelectedIndex(0);      
       rbtnasma.setSelected(false);
       rbtndiabetes.setSelected(false);
       rbtnherpes.setSelected(false);
       rbtnanemia.setSelected(false);
       rbtnepilepsia.setSelected(false);
       rbtnhepatitis.setSelected(false);
       rbtnecardiaca.setSelected(false);
       rbtnhipertencion.setSelected(false);
       rbtnesanguinea.setSelected(false);
       rbtnpendcrino.setSelected(false);
       rbtnfreumatica.setSelected(false);
       rbtntoseos.setSelected(false);
       rbtndcerebral.setSelected(false);
       rbtnpemocionales.setSelected(false);
       
       txtcedula.setText("");
       txtEstDes.setText("");
       txtMedDes.setText("");
       txtDolDes.setText("");
       txtAlerDes.setText("");
       txtMastDes.setText("");
       txtOrlDes.setText("");
       txtNroHist.setText("");
       
       tbtnEst.setSelected(false);
       configurarTbtnEst();
       
       tbtnMed.setSelected(false);
       configurarTbtnMed(); 
       
       tbtnRonca.setSelected(false);
       configurarTbtnRonca();
       
       tbtnResfrio.setSelected(false);
       configurarTbtnResfrio();
       
       tbtnAmigd.setSelected(false);
       configurarTbtnAmigd();
       
       tbtnResp.setSelected(false);
       configurarTbtnResp();
       
       tbtnMast.setSelected(false);
       configurarTbtnMast();
       
       tbtnOrl.setSelected(false);
       configurarTbtnOrl();
       
       fchOrl.setCalendar(null);
       
       cmbResCuando.setSelectedIndex(0);
       
       rbtnPolvo.setSelected(false);
       rbtnMed.setSelected(false);
       rbtnAlimentos.setSelected(false);
       rbtnCirugia.setSelected(false);
       rbtnAmigd.setSelected(false);
       rbtnAdenoi.setSelected(false);
       
   
   
   }
   private void inicializarAtributos(){
       focoBusq="";
       enfermedades=0;
       pacID="";
       pacNombre="";
       tPacCedula="";
       pacCedula="";
       pacEdad="";
       pacDireccion="";
       pacTelefono="";
       pacSexo="";
       preAlergia="";
       pre_est_des="";
       pre_med_des="";
       pre_dol_des="";
       pre_mas_des="";
       pre_orl_des="";
       preAlergiaOpc="";
       pre_orlOpc="";
       pre_est=false;
       histEstado=false;
       pre_med=false;
       pre_dol=false;
       preRonca=false;
       preResfrio=false;
       preAdm_sin=false;
       pre_RespiraBoca=false;
       pre_mas=false;
       pre_orl=false;
       pre_orl_fecha=new Date();
       nroHistoria=0;      
       preRespOpc=0;
       
   
   }
   private void inicializarPantalla(){
       btnactualizar.setEnabled(false);
       btnguardar.setEnabled(false);
       btneliminar.setEnabled(false);
       lblEstPorque.setVisible(false);
       jtxtEstDes.setVisible(false);
       lblMedCuales.setVisible(false);
       jtxtMedDes.setVisible(false);
       cmbResCuando.setEnabled(false);
       lblMastPorque.setVisible(false);
       jtxtMastDes.setVisible(false);
       lblOrlCuando.setVisible(false);
       lblOrlPorque.setVisible(false);
       rbtnCirugia.setVisible(false);
       rbtnAmigd.setVisible(false);
       rbtnAdenoi.setVisible(false);
       jtxtOrlDes.setVisible(false);
       fchOrl.setVisible(false);
       
   
   }
   private void configurarTbtnEst(){
       if(tbtnEst.isSelected()){
            tbtnEst.setText("Si");
            lblEstPorque.setVisible(true);
            jtxtEstDes.setVisible(true);
            
        }else{
            tbtnEst.setText("No");
            lblEstPorque.setVisible(false);
            jtxtEstDes.setVisible(false);

        }
   
   }
   private void configurarTbtnMed(){
       if(tbtnMed.isSelected()){
           tbtnMed.setText("Si");
           lblMedCuales.setVisible(true);
           jtxtMedDes.setVisible(true);
       }else{
           tbtnMed.setText("No");
           lblMedCuales.setVisible(false);
           jtxtMedDes.setVisible(false);           
       }
   }
   private void configurarTbtnRonca(){
       if(tbtnRonca.isSelected()){
           tbtnRonca.setText("Si");
       }else{
           tbtnRonca.setText("No");
       }
   }
   private void configurarTbtnResfrio(){
       if(tbtnResfrio.isSelected()){
            tbtnResfrio.setText("Si");
        }else{
            tbtnResfrio.setText("No");

        }
   }
   private void configurarTbtnAmigd(){
       if(tbtnAmigd.isSelected()){
            tbtnAmigd.setText("Si");
        }else{
            tbtnAmigd.setText("No");
        }
   }
   private void configurarTbtnResp(){
       if(tbtnResp.isSelected()){
           tbtnResp.setText("Si");
           cmbResCuando.setEnabled(true);
       }else{
           tbtnResp.setText("No");
           cmbResCuando.setEnabled(false);
       }
   }
   private void configurarTbtnMast(){
       if(tbtnMast.isSelected()){
           tbtnMast.setText("Si");
           lblMastPorque.setVisible(true);
           jtxtMastDes.setVisible(true);
       }else{
           tbtnMast.setText("No");
           lblMastPorque.setVisible(false);
           jtxtMastDes.setVisible(false);
       }
   }
   private void configurarTbtnOrl(){
       if(tbtnOrl.isSelected()){
           tbtnOrl.setText("Si");
           lblOrlCuando.setVisible(true);
           lblOrlPorque.setVisible(true);
           rbtnCirugia.setVisible(true);
           rbtnAmigd.setVisible(true);
           rbtnAdenoi.setVisible(true);
           jtxtOrlDes.setVisible(true);
           fchOrl.setVisible(true);
       }else{
           tbtnOrl.setText("No");
           lblOrlCuando.setVisible(false);
           lblOrlPorque.setVisible(false);
           rbtnCirugia.setVisible(false);
           rbtnAmigd.setVisible(false);
           rbtnAdenoi.setVisible(false);
           jtxtOrlDes.setVisible(false);
           fchOrl.setVisible(false);
       }
   }
   private Date mysqlDateAJavaDate(String mDate){            
        Date fecha=new Date();
        String[] fechaArray=new String[3];
        int dia=0, mes=0, año=0;
        fechaArray=mDate.split("-");
        año=Integer.valueOf(fechaArray[0]);
        mes=Integer.valueOf(fechaArray[1]);
        dia=Integer.valueOf(fechaArray[2]);
        fecha.setDate(dia);
        fecha.setMonth(mes-1);
        fecha.setYear(año-1900);
   return fecha;
   }
   private String javaDateAMysqlDate(Date jDate){
       String mDate="";
       int dia=0, mes=0, año=0;
       dia=jDate.getDate();
       mes=jDate.getMonth()+1;
       año=jDate.getYear()+1900;
       mDate= año+"-"+mes+"-"+dia;
       return mDate;
   
   }
   private int booleanAInt(Boolean valor){
       int intValor;
       if (valor)
           intValor=1;
       else
           intValor=0;
       
       return intValor;
   }
   private boolean intABoolean(int intValor){
       Boolean valor;
       if (intValor==1)
           valor=true;
       else
           valor=false;
       
       return valor;        
   }
   private int[] numAArray(long longValor,int longitud){
       String valtempo=String.valueOf(longValor);
       int ceros=0;
       int[] valor=new int[longitud];
       if(valtempo.length()<longitud){
           ceros=longitud-valtempo.length();
           for(int i=0;i<ceros;i++)
               valor[i]=0;           
           }
       for(int i=ceros;i<longitud;i++)
           valor[i]=Integer.valueOf(String.valueOf(valtempo.charAt(i-ceros)));       
       return valor;        
   }
   private int[] numAArray(String intValor,int longitud){
       int ceros=0;
       int[] valor=new int[longitud];
       if(intValor.length()<longitud){
           ceros=longitud-intValor.length();
           for(int i=0;i<ceros;i++){
               valor[i]=0;
           }
           }
       for(int i=ceros;i<longitud;i++)
           valor[i]=Integer.valueOf(String.valueOf(intValor.charAt(i-ceros)));       
       return valor;        
   }
   
   private boolean noNulo(String valor){
       boolean notnull=true;
       try{
           if(!valor.isEmpty())
               notnull=true;
       
       }catch (Exception ex){
           notnull=false;
       }
       
         return notnull;
   }
   private String nroHistFormateado(int nrohist){
       String numFormateado="",tempo="";
       int ceros=0;
       tempo=String.valueOf(nrohist);
       ceros=10-tempo.length();
       for(int i=0;i<ceros;i++)
           numFormateado+="0";
       numFormateado+=tempo;
   
       return numFormateado;
   }
   private int nroHistNoFormateado(String numFormateado){
       int tempoNum=0;
       tempoNum=Integer.valueOf(numFormateado);
       return tempoNum;
   }
   private String[] splitAlergias(String celdaalergias){
       String alergias[]=celdaalergias.split(",");
       return alergias;
       
   }
   public int calcularEdad(Date fechaNacimiento){
       Date fechaActual=new Date();
       Calendar fechaAct = Calendar.getInstance();
       fechaAct.setTime(fechaActual);
       
       Calendar fechaNac = Calendar.getInstance();
       fechaNac.setTime(fechaNacimiento);
       
       int dif_anios = fechaAct.get(Calendar.YEAR) - fechaNac.get(Calendar.YEAR);
       int dif_meses = fechaAct.get(Calendar.MONTH) - fechaNac.get(Calendar.MONTH);
       int dif_dias = fechaAct.get(Calendar.DAY_OF_MONTH) - fechaNac.get(Calendar.DAY_OF_MONTH);
       
       //Si está en ese año pero todavía no los ha cumplido
       if(dif_meses<0 || (dif_meses==0 && dif_dias<0)){
           dif_anios--;
       }
       return dif_anios;
   }
   private int histRep(){
       ConexionMySQL mysql =new ConexionMySQL();
       Connection cn=mysql.Conectar();
       String sSQL1 = "";
       String mensaje = "";        
        
        /*Comienza a verifica las tablas activas para el paciente actual */
       
    
        if(focoBusq.equals("nroHistorial")){
        sSQL1= "SELECT hist_nro FROM historia_clinica where (hist_nro ="+nroHistoria +")";
        }
        if(focoBusq.equals("nroCedula")){
        sSQL1="SELECT pac_cedula FROM paciente where (CONCAT(pac_tipocedula,pac_cedula)like '"+tPacCedula+pacCedula+"')";
          
        }
        try
        {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL1);
           
          
            if(rs.next()){
            JOptionPane.showMessageDialog(null, "Paciente ya registrado con una historia clinica ,\nPor Favor utilice otro...");
            return 1;
            }
        } 
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
   
   return 0;
   }
   private void ValidarNun(java.awt.event.KeyEvent evt){
               if(!Character.isDigit(evt.getKeyChar()) ){
                   Toolkit.getDefaultToolkit().beep();
                   evt.consume();
               }
   
   }
   private void validarDigitos(javax.swing.JTextField jtex,java.awt.event.KeyEvent evt){
        if(jtex.getText().length()==10){
           ValidarNun(evt);
           
        }else{
        validarLimite(jtex, evt, 10);
           ValidarNun(evt);
        }         
       
   }
   private void validarLimite(javax.swing.JTextField jtex,java.awt.event.KeyEvent evt,int longitud){
       if(jtex.getText().length()>=longitud){
           Toolkit.getDefaultToolkit().beep();
           evt.consume();       
       }
   }
   private void validarLimite(javax.swing.JTextArea jtex,java.awt.event.KeyEvent evt,int longitud){
       if(jtex.getText().length()>=longitud){
           Toolkit.getDefaultToolkit().beep();
           evt.consume();       
       }
   }
   private void validarCedula(javax.swing.JTextField jtex,java.awt.event.KeyEvent evt){
       String caracter="";
       caracter=String.valueOf(evt.getKeyChar());
       caracter=caracter.toUpperCase();
       //JOptionPane.showMessageDialog(null, caracter);
       if(jtex.getText().isEmpty()){
       if(caracter.startsWith("V")){
       }else{
           if(caracter.startsWith("E")){               
           }else{
               
                   Toolkit.getDefaultToolkit().beep();
                   evt.consume();
               
           }
       }
   }else{
           if(jtex.getText().startsWith("V")){
               //JOptionPane.showMessageDialog(null, "Elatecla es comienza con v");
               if(jtex.getText().length()==1&&!jtex.getText().contains("V-")&&Character.isDigit(evt.getKeyChar())){
                   jtex.setText(jtex.getText()+"-");
               }else{
                   if(evt.paramString().contains("primaryLevelUnicode=8")){
                   jtex.selectAll();
                   }else{
                       if(jtex.getText().length()>1){
                           validarDigitos(jtex,evt);                      
                       }else{
                       Toolkit.getDefaultToolkit().beep();
                       evt.consume();
                       }
                   }
               }
       }else{
           if(jtex.getText().startsWith("E")){
           if(jtex.getText().length()==1&&!jtex.getText().contains("E-")&&Character.isDigit(evt.getKeyChar())){
                   jtex.setText(jtex.getText()+"-");
               }else{
                   if(evt.paramString().contains("primaryLevelUnicode=8")){
                   jtex.selectAll();
                   }else{
                       if(jtex.getText().length()>1){
                           validarDigitos(jtex,evt);                      
                       }else{
                       Toolkit.getDefaultToolkit().beep();
                       evt.consume();
                       }
                   }
               }
               
           }
       }
           
       
       }
       
       
       evt.setKeyChar(caracter.charAt(0));
   }
   private void setCmbTCedPac(){
       if(tPacCedula.equals("V-"))
           cmbTCedPac.setSelectedIndex(0);
       else
           if(tPacCedula.equals("E-"))
               cmbTCedPac.setSelectedIndex(1);
       
   
   }
   private void getCmbTCedPac(){
       if(cmbTCedPac.getSelectedIndex()==0)
           tPacCedula="V-";
       else
           if(cmbTCedPac.getSelectedIndex()==0)
           tPacCedula="E-";
       
   
   }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnactualizar;
    private javax.swing.JButton btnbuscar;
    private javax.swing.JButton btncancelar;
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton btnlimpiar;
    private javax.swing.JComboBox cmbResCuando;
    private javax.swing.JComboBox cmbSexo;
    private javax.swing.JComboBox cmbTCedPac;
    private com.toedter.calendar.JDateChooser fchOrl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jtxtEstDes;
    private javax.swing.JScrollPane jtxtMastDes;
    private javax.swing.JScrollPane jtxtMedDes;
    private javax.swing.JScrollPane jtxtOrlDes;
    private javax.swing.JLabel lblEstPorque;
    private javax.swing.JLabel lblMastPorque;
    private javax.swing.JLabel lblMedCuales;
    private javax.swing.JLabel lblOrlCuando;
    private javax.swing.JLabel lblOrlPorque;
    private javax.swing.JRadioButton rbtnAdenoi;
    private javax.swing.JRadioButton rbtnAlimentos;
    private javax.swing.JRadioButton rbtnAmigd;
    private javax.swing.JRadioButton rbtnCirugia;
    private javax.swing.JRadioButton rbtnMed;
    private javax.swing.JLabel rbtnOtros;
    private javax.swing.JRadioButton rbtnPolvo;
    private javax.swing.JRadioButton rbtnanemia;
    private javax.swing.JRadioButton rbtnasma;
    private javax.swing.JRadioButton rbtndcerebral;
    private javax.swing.JRadioButton rbtndiabetes;
    private javax.swing.JRadioButton rbtnecardiaca;
    private javax.swing.JRadioButton rbtnepilepsia;
    private javax.swing.JRadioButton rbtnesanguinea;
    private javax.swing.JRadioButton rbtnfreumatica;
    private javax.swing.JRadioButton rbtnhepatitis;
    private javax.swing.JRadioButton rbtnherpes;
    private javax.swing.JRadioButton rbtnhipertencion;
    private javax.swing.JRadioButton rbtnpemocionales;
    private javax.swing.JRadioButton rbtnpendcrino;
    private javax.swing.JRadioButton rbtntoseos;
    private javax.swing.JToggleButton tbtnAmigd;
    private javax.swing.JToggleButton tbtnEst;
    private javax.swing.JToggleButton tbtnMast;
    private javax.swing.JToggleButton tbtnMed;
    private javax.swing.JToggleButton tbtnOrl;
    private javax.swing.JToggleButton tbtnResfrio;
    private javax.swing.JToggleButton tbtnResp;
    private javax.swing.JToggleButton tbtnRonca;
    private javax.swing.JTextField txtAlerDes;
    private javax.swing.JTextField txtDolDes;
    private javax.swing.JTextField txtDomicilio;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextArea txtEstDes;
    private javax.swing.JTextArea txtMastDes;
    private javax.swing.JTextArea txtMedDes;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNroHist;
    private javax.swing.JTextArea txtOrlDes;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtcedula;
    // End of variables declaration//GEN-END:variables
}
